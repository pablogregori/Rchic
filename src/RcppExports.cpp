// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// write_transactions
void write_transactions(NumericMatrix data);
RcppExport SEXP _rchic_write_transactions(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    write_transactions(data);
    return R_NilValue;
END_RCPP
}
// dynamic_cloud
IntegerVector dynamic_cloud(NumericVector data, IntegerVector number_partition);
RcppExport SEXP _rchic_dynamic_cloud(SEXP dataSEXP, SEXP number_partitionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type number_partition(number_partitionSEXP);
    rcpp_result_gen = Rcpp::wrap(dynamic_cloud(data, number_partition));
    return rcpp_result_gen;
END_RCPP
}
// hierarchy
List hierarchy(NumericMatrix cohesion_matrix, NumericVector list_occurrences_variables, NumericMatrix supplementary_variables, NumericMatrix matrix_values, LogicalVector contribution_supp, LogicalVector typicality_supp, LogicalVector Verbose);
RcppExport SEXP _rchic_hierarchy(SEXP cohesion_matrixSEXP, SEXP list_occurrences_variablesSEXP, SEXP supplementary_variablesSEXP, SEXP matrix_valuesSEXP, SEXP contribution_suppSEXP, SEXP typicality_suppSEXP, SEXP VerboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cohesion_matrix(cohesion_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type list_occurrences_variables(list_occurrences_variablesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type supplementary_variables(supplementary_variablesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_values(matrix_valuesSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type contribution_supp(contribution_suppSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type typicality_supp(typicality_suppSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type Verbose(VerboseSEXP);
    rcpp_result_gen = Rcpp::wrap(hierarchy(cohesion_matrix, list_occurrences_variables, supplementary_variables, matrix_values, contribution_supp, typicality_supp, Verbose));
    return rcpp_result_gen;
END_RCPP
}
// similarity
List similarity(NumericMatrix similarity_matrix, NumericVector list_occurrences_variables, NumericMatrix supplementary_variables, NumericMatrix matrix_values, LogicalVector contribution_supp, LogicalVector typicality_supp, LogicalVector Verbose);
RcppExport SEXP _rchic_similarity(SEXP similarity_matrixSEXP, SEXP list_occurrences_variablesSEXP, SEXP supplementary_variablesSEXP, SEXP matrix_valuesSEXP, SEXP contribution_suppSEXP, SEXP typicality_suppSEXP, SEXP VerboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type similarity_matrix(similarity_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type list_occurrences_variables(list_occurrences_variablesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type supplementary_variables(supplementary_variablesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_values(matrix_valuesSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type contribution_supp(contribution_suppSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type typicality_supp(typicality_suppSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type Verbose(VerboseSEXP);
    rcpp_result_gen = Rcpp::wrap(similarity(similarity_matrix, list_occurrences_variables, supplementary_variables, matrix_values, contribution_supp, typicality_supp, Verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rchic_write_transactions", (DL_FUNC) &_rchic_write_transactions, 1},
    {"_rchic_dynamic_cloud", (DL_FUNC) &_rchic_dynamic_cloud, 2},
    {"_rchic_hierarchy", (DL_FUNC) &_rchic_hierarchy, 7},
    {"_rchic_similarity", (DL_FUNC) &_rchic_similarity, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_rchic(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
